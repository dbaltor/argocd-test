# top-level key must match the dependency name in the umbrella helm chart
superset:
  image:
    # opt-out of data collection via Scarf Gateway
    repository: apache/superset
  postgresql:
    ## Set to false if bringing your own PostgreSQL.
    enabled: false
  # Superset node configuration
  supersetNode:
    replicaCount: 1
    autoscaling:
      enabled: true
      minReplicas: 1
      maxReplicas: 10
      targetCPUUtilizationPercentage: 80
      targetMemoryUtilizationPercentage: 80
    connections:
      # You need to change below configuration incase bringing own PostgresSQL instance and also set postgresql.enabled:false
      db_host: "superset.cdwqyes4ujvo.eu-west-2.rds.amazonaws.com"
      db_port: "5432"
      db_user: superset
      db_pass: <path:prod/superset#postgresql-password>
      db_name: superset
  supersetCeleryBeat:
    # This is required to trigger the scheduled tasks to send alerts and reports
    enabled: true
  supersetWorker:
    # Scale out celery works to query datasets in parallel
    replicaCount: 3
    # Install chromedriver used to send Alerts and Reports
    command:
      - /bin/sh
      - -c
      - |
        # Install chrome webdriver
        # See https://github.com/apache/superset/blob/4fa3b6c7185629b87c27fc2c0e5435d458f7b73d/docs/src/pages/docs/installation/email_reports.mdx
        apt-get update
        apt-get install -y wget
        wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
        apt-get install -y --no-install-recommends ./google-chrome-stable_current_amd64.deb
        wget https://chromedriver.storage.googleapis.com/88.0.4324.96/chromedriver_linux64.zip
        apt-get install -y zip
        unzip chromedriver_linux64.zip
        chmod +x chromedriver
        mv chromedriver /usr/bin
        apt-get autoremove -yqq --purge
        apt-get clean
        rm -f google-chrome-stable_current_amd64.deb chromedriver_linux64.zip
  
        # Run
        . {{ .Values.configMountPath }}/superset_bootstrap.sh; celery --app=superset.tasks.celery_app:app worker
  bootstrapScript: |
    #!/bin/bash
    echo "holidays==0.23" > /tmp/constraints.txt # apache-superset 3.0.1 requires holidays 0.23
    pip install --upgrade pip
    # Install Prophet (Predictive Analytics)
    pip install -c /tmp/constraints.txt prophet==1.1.3
    # Install postgres driver
    pip install psycopg2==2.9.9 &&\
    if [ ! -f ~/bootstrap ]; then echo "Running Superset with uid {{ .Values.runAsUser }}" > ~/bootstrap; fi
  configOverrides:
    my_override: |
      # Configure a strong SECRET_KEY
      SECRET_KEY = '<path:prod/superset#secret-key>'
      # Configure Superset metastore access with the new postgres password
      SQLALCHEMY_DATABASE_URI = 'postgresql://superset:<path:prod/superset#postgresql-password>@superset.cdwqyes4ujvo.eu-west-2.rds.amazonaws.com/superset'
      # This will make sure the redirect_uri is properly computed, even with SSL offloading
      ENABLE_PROXY_FIX = True
      # https://github.com/apache/superset/blob/master/RESOURCES/FEATURE_FLAGS.md
      FEATURE_FLAGS = {
          "DYNAMIC_PLUGINS": False
      }
  # env variables to config SMTP server access
  extraEnv:
    SMTP_HOST: smtp.gmail.com
    SMTP_USER: user@gmail.com
    SMTP_PORT: "587"
    SMTP_MAIL_FROM: user@gmail.com
  extraSecretEnv:
    SMTP_PASSWORD: <path:prod/superset#smtp-password>
  # Enable ingress controller
  ingress:
    enabled: true
    annotations:
      alb.ingress.kubernetes.io/target-type: ip
      alb.ingress.kubernetes.io/scheme: internet-facing
      alb.ingress.kubernetes.io/healthcheck-path: /health
      alb.ingress.kubernetes.io/certificate-arn: <path:prod/superset#alb-cert-arn>
    ingressClassName: alb
    pathType: Prefix
    hosts:
      - superset.dbaltor.online
    # Used when enabling TLS to the ingress
    # tls:
    #   - hosts:
    #     - superset.dbaltor.online
    #     secretName: superset-ingress-tls
